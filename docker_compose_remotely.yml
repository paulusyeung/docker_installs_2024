---
services:
  remotely:
    depends_on:
        postgres:
          condition: service_healthy
    image: immybot/remotely:latest
    container_name: remotely
    volumes:
      - ./var/www/remotely:/app/AppData
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - remotely
    environment:
      # ASPNETCORE environment variables should *not* be changed.
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=5000
      # Other ASP.NET Core configurations can be overridden here, such as Logging.
      # See https://learn.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-8.0
      - Serilog__MinimumLevel__Override__Microsoft.AspNetCore=Warning
      - Serilog__MinimumLevel__Override__System=Warning
      # Values for DbProvider are SQLite, SQLServer, and PostgreSQL.
      - Remotely_ApplicationOptions__DbProvider=PostgreSQL
      # The Docker gateway will be used in Forwarded Headers, which is necessary to
      # to correctly determine request hostname and scheme within the app.  If you change
      # the network config, you must update this value as well.
      - Remotely_ApplicationOptions__DockerGateway="${PREFERRED_GATEWAY}"
      # This path shouldn't be changed.  It points to the Docker volume.
      - Remotely_ConnectionStrings__SQLite=Data Source=/app/AppData/Remotely.db
      # If using SQL Server, change the connection string to point to your SQL Server instance.
      # - Remotely_ConnectionStrings__SQLServer=Server=(localdb)\\mssqllocaldb;Database=Remotely-Server-53bc9b9d-9d6a-45d4-8429-2a2761773502;Trusted_Connection=True;MultipleActiveResultSets=true
      # If using PostgreSQL, change the connection string to point to your PostgreSQL instance.
      - Remotely_ConnectionStrings__PostgreSQL=Host=postgres;Database="${POSTGRES_DB}";Username="${POSTGRES_USER}";Password="${POSTGRES_PASSWORD}";

  postgres:
      image: postgres:15
      volumes:
        - './pg_data:/var/lib/postgresql/data'
      environment:
        POSTGRES_USER: "${POSTGRES_USER}"
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"  # <-- should match the password in the DATABASE_URL above
        POSTGRES_DB: "${POSTGRES_DB}"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        - remotely

networks:
  default:
    name: my-main-net
    external: true
  remotely:
    name: remotely-network
    driver: bridge
    ipam:
      config:
        - subnet: "${PREFERRED_SUBNET}"
          gateway: "${PREFERRED_GATEWAY}"